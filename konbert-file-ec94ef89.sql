CREATE TABLE "mytable" (
  "/* If you are a beginner" text,
  "refer to the creating and querying an SQL Database file." text NULL
);

INSERT INTO "mytable" ("/* If you are a beginner","refer to the creating and querying an SQL Database file.")
VALUES
('Comments here will serve as form of possible questions. Let your curiousity drive you */',NULL),
('-- Show me actor''s first_name','last_name that have Nick'),
('SELECT first_name',NULL),
('last_name',NULL),
('FROM',NULL),
('actor',NULL),
('WHERE',NULL),
('first_name IN (''Nick''','''Ed'''),
('-- Show me only last_name of actor whose first names are Ed','Nick and Jennifer'),
('SELECT',NULL),
('last_name',NULL),
('FROM',NULL),
('actor',NULL),
('WHERE',NULL),
('first_name in (''Ed''','''Nick'''),
('-- Show me all the details of the address table',NULL),
('SELECT *',NULL),
('FROM',NULL),
('address;',NULL),
('-- I want to see district & phone in descending order that are in the address table',NULL),
('SELECT',NULL),
('district',NULL),
('phone',NULL),
('FROM',NULL),
('address',NULL),
('ORDER BY',NULL),
('district DESC',NULL),
('phone DESC;',NULL),
('-- From fiilm table','show me title'),
('SELECT film.title',NULL),
('film.film_id',NULL),
('inventory.inventory_id',NULL),
('FROM',NULL),
('film',NULL),
('INNER JOIN',NULL),
('inventory',NULL),
('ON',NULL),
('film.film_id = inventory.film_id;',NULL),
('-- show me first_name','last_name of actors whose first_name (Ed'),
('SELECT',NULL),
('first_name',NULL),
('last_name',NULL),
('FROM',NULL),
('actor',NULL),
('WHERE',NULL),
('first_name',NULL),
('IN',NULL),
('(Select',NULL),
('DISTINCT',NULL),
('first_name',NULL),
('FROM',NULL),
('actor',NULL),
('WHERE',NULL),
('first_name IN (''Nick''','''Ed'''),
('-- show me top 5 rows from inventory table and rental table.',NULL),
('SELECT inventory.*','rental.*'),
('FROM inventory',NULL),
('JOIN rental',NULL),
('ON rental.inventory_id = inventory.inventory_id',NULL),
('LIMIT 5;',NULL),
('-- From the rental and payment table','show me just 10 rows of rental_id'),
('SELECT rental.rental_id',NULL),
('rental.rental_date',NULL),
('payment.payment_id',NULL),
('payment.amount',NULL),
('FROM rental',NULL),
('JOIN payment',NULL),
('ON payment.rental_id = rental.rental_id',NULL),
('ORDER BY amount DESC',NULL),
('LIMIT 10;',NULL),
('-- from film_category table','film and film_actor table'),
('SELECT film_category.film_id',NULL),
('film_category.category_id',NULL),
('film.film_id',NULL),
('film.title',NULL),
('film.rental_rate',NULL),
('film_actor.film_id',NULL),
('FROM film_category',NULL),
('JOIN film',NULL),
('ON film.film_id = film_category.film_id',NULL),
('JOIN film_actor',NULL),
('ON film_actor.film_id = film.film_id',NULL),
('LIMIT 5;',NULL),
('-- Show me all the other details in the actor table where actor_id is empty',NULL),
('SELECT *',NULL),
('FROM actor',NULL),
('WHERE actor_id IS NULL;',NULL),
('-- Show me all the other details in the actor table where actor_id is not empty',NULL),
('SELECT *',NULL),
('FROM actor',NULL),
('WHERE actor_id IS NOT NULL;',NULL),
('-- I want to see number of non-empty rows in film table',NULL),
('SELECT COUNT(*)',NULL),
('FROM film;',NULL),
('--I want to see number of film_id in film table',NULL),
('SELECT COUNT',NULL),
('(film_id)',NULL),
('FROM film;',NULL),
('-- Unlike count','sum can only be used for numeric columns. I want to see the sum of amount from the payment table'),
('SELECT SUM(Payment.amount) AS sum_amt',NULL),
('FROM payment;',NULL),
('-- I want to see both Maximum and minimun amount in the payment table',NULL),
('SELECT MAX(amount) AS Max_amt',NULL),
('MIN(amount) AS Min_amt',NULL),
('FROM payment;',NULL),
('-- calculate the average amount by using the COUNT and SUM command. Show the maximun and minimun amount',NULL),
('SELECT SUM(payment.amount) AS sum_amt',NULL),
('COUNT(amount) AS cnt_amt',NULL),
('MAX(amount) AS Max_amt',NULL),
('MIN(amount) AS Min_amt',NULL),
('AVG(amount) AS avg_amt',NULL),
('SUM(payment.amount) / COUNT(amount) AS avg_amt2',NULL),
('FROM payment;',NULL),
('-- show the sum of payment made by each payment_id',NULL),
('SELECT payment.payment_id',NULL),
('SUM(Payment.amount) AS sum_amt',NULL),
('FROM payment',NULL),
('GROUP BY payment_id',NULL),
('ORDER BY payment_id;',NULL),
('-- from the actor table','show me unique first and last names. PS'),
('SELECT DISTINCT first_name',NULL),
('last_name',NULL),
('FROM actor;',NULL),
('-- show the sum of amount by each payment id that is greater then 5.99',NULL),
('SELECT payment.payment_id',NULL),
('SUM(Payment.amount) AS sum_amt',NULL),
('FROM payment',NULL),
('GROUP BY 1',NULL),
('HAVING SUM(payment.amount) >= 5.99;',NULL),
('--show the sum of rental_rate of films by month',NULL),
('SELECT DATE_TRUNC(''month''','film.last_update)'),
('SUM(rental_rate)',NULL),
('FROM film',NULL),
('GROUP BY DATE_TRUNC(''month''','film.last_update)'),
('ORDER BY DATE_TRUNC(''month''','film.last_update);'),
('--show the sum of rental_rate of films by day of the week',NULL),
('SELECT DATE_PART(''dow''','film.last_update)'),
('SUM(rental_rate)',NULL),
('FROM film',NULL),
('GROUP BY DATE_PART(''dow''','film.last_update)'),
('ORDER BY DATE_PART(''dow''','film.last_update);'),
('-- Show me film.id','film.title'),
('SELECT film.film_id',NULL),
('film.title',NULL),
('film.description',NULL),
('film.length',NULL),
('CASE WHEN film.length = 86 OR film.length <= 86 THEN ''Yes'' ELSE ''NO'' END AS Not_lnger_than_86',NULL),
('FROM film',NULL),
('ORDER BY film.film_id;',NULL),
('-- Show me the COUNT of the two categories above.',NULL),
('SELECT',NULL),
('CASE WHEN film.length = 86 OR film.length <= 86 THEN ''Yes'' ELSE ''NO'' END AS Not_lnger_than_86',NULL),
('COUNT(*) Either',NULL),
('FROM film',NULL),
('GROUP BY 1;',NULL),
('-- SHow me film.id','film.title'),
('SELECT film.film_id',NULL),
('film.title',NULL),
('film.description',NULL),
('film.length',NULL),
('CASE WHEN film.length > 100 THEN ''Over 100''',NULL),
('WHEN film.length > 86 AND film.length <= 100 THEN ''86 - 100''',NULL),
('WHEN film.length > 72 AND film.length <= 86 THEN ''72 - 86''',NULL),
('ELSE ''72 or under'' END AS film_length',NULL),
('FROM film',NULL),
('ORDER BY film.film_id;',NULL),
('-- Show me the COUNT of the four categories above.',NULL),
('SELECT',NULL),
('CASE WHEN film.length > 100 THEN ''Over 100''',NULL),
('WHEN film.length > 86 AND film.length <= 100 THEN ''86 - 100''',NULL),
('WHEN film.length > 72 AND film.length <= 86 THEN ''72 - 86''',NULL),
('ELSE ''72 or under'' END AS film_length',NULL),
('COUNT(*) AS movie_length_cat',NULL),
('FROM film',NULL),
('GROUP BY 1;',NULL),
('-- Seperate the first three','last 8 number of phone in the address table into another column'),
('SELECT district',NULL),
('city_id',NULL),
('phone',NULL),
('LEFT(phone','3) AS first_three'),
('RIGHT(phone','8) AS last_8'),
('RIGHT(phone','LENGTH(phone) - 3) AS last_11_alt'),
('FROM address;',NULL),
('-- view all the columns in city and add two columns to show city as upper and lower case',NULL),
('SELECT *',NULL),
('UPPER(city)',NULL),
('LOWER(city)',NULL),
('FROM CITY;',NULL),
('/* STRPOS can be used for comma(',')'),
('If you omit -1 in the LEFT command','the result will have fullstop(.) at the end */'),
('SELECT first_name',NULL),
('last_name',NULL),
('email',NULL),
('STRPOS(customer.email','''.'')'),
('POSITION(''.'' IN customer.email)',NULL),
('LOWER(LEFT(customer.email','POSITION(''.'' IN customer.email)-1)) AS email_name_low'),
('UPPER(LEFT(customer.email','POSITION(''.'' IN customer.email)-1)) AS email_name'),
('LOWER(LEFT(customer.email','POSITION(''.'' IN customer.email))) AS email_wo_1'),
('FROM customer',NULL),
('LIMIT 5;',NULL),
('-- split the street number from the address column',NULL),
('SELECT address',NULL),
('district',NULL),
('city_id',NULL),
('STRPOS(address',''' '')'),
('POSITION('' '' IN address)',NULL),
('LEFT(address','POSITION('' '' IN address)-1) as strt_number'),
('FROM  address',NULL),
('LIMIT 5;',NULL),
('-- Combine first_name and last_name from the customer table to become full_name. PS: You can use either CONCAT or ||',NULL),
('SELECT',NULL),
('first_name',NULL),
('last_name',NULL),
('CONCAT(first_name',''' '''),
('first_name || '' '' || last_name AS full_name2',NULL),
('FROM  customer;',NULL),
('SELECT actor.first_name',NULL),
('actor.last_name',NULL),
('actor.first_name || '' '' || actor.last_name AS full_name',NULL),
('film.title',NULL),
('film.description',NULL),
('film.length',NULL),
('CONCAT(actor.first_name',''' '''),
('FROM film_actor',NULL),
('JOIN actor ON film_actor.actor_id = actor.actor_id',NULL),
('JOIN film ON film.film_id = film_actor.film_id;',NULL),
('SELECT',NULL),
('film.title',NULL),
('film.length',NULL),
('CONCAT(actor.first_name',''' '''),
('FROM film_actor',NULL),
('JOIN actor ON film_actor.actor_id = actor.actor_id',NULL),
('JOIN film ON film.film_id = film_actor.film_id',NULL),
('WHERE film.length > 60;',NULL);
